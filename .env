# Set this value to 'agree' to accept our license:
# LICENSE: https://github.com/calendso/calendso/blob/main/LICENSE
#
# Summary of terms:
# - The codebase has to stay open source, whether it was modified or not
# - You can not repackage or sell the codebase
# - Acquire a commercial license to remove these terms by emailing: license@cal.com
NEXT_PUBLIC_LICENSE_CONSENT=''

# DATABASE_URL='postgresql://<user>:<pass>@<db-host>:<db-port>/<db-name>'
DATABASE_URL="postgres://zmtkungdsfremz:f63cb765fb6ca0e62be12df6beb5c35bfa61e1bf787693fcf54c6bed03ce3b61@ec2-3-216-113-109.compute-1.amazonaws.com:5432/dbrj0npdrhf2bj"

# Needed to enable Google Calendar integrationa and Login with Google
# @see https://github.com/calendso/calendso#obtaining-the-google-api-credentials
GOOGLE_API_CREDENTIALS='{"web":{"client_id":"883667270469-lc7vpi5e1ckbj90no2aebmen83913i2s.apps.googleusercontent.com","project_id":"laravel-187316","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","redirect_uris":["https://ezzoom-db.herokuapp.com/api/integrations/googlecalendar/callback"],"javascript_origins":["https://ezzoom-db.herokuapp.com"]}}'

# To enable Login with Google you need to:
# 1. Set `GOOGLE_API_CREDENTIALS` above
# 2. Set `GOOGLE_LOGIN_ENABLED` to `true`
GOOGLE_LOGIN_ENABLED=true

BASE_URL='http://maaz.live'
NEXT_PUBLIC_APP_URL='http://maaz.live'

JWT_SECRET='secret'
# This is used so we can bypass emails in auth flows for E2E testing
PLAYWRIGHT_SECRET=

# To enable SAML login, set both these variables
# @see https://github.com/calendso/calendso/tree/main/ee#setting-up-saml-login
# SAML_DATABASE_URL="postgresql://postgres:@localhost:5450/cal-saml"
# SAML_ADMINS='pro@example.com'

# @see: https://github.com/calendso/calendso/issues/263
# Required for Vercel hosting - set NEXTAUTH_URL to equal your BASE_URL
# NEXTAUTH_URL='https://ezzoom-db.herokuapp.com'

# Remove this var if you don't want Cal to collect anonymous usage
NEXT_PUBLIC_TELEMETRY_KEY=js.2pvs2bbpqq1zxna97wcml.oi2jzirnbj1ev4tc57c5r

# Used for the Office 365 / Outlook.com Calendar integration
MS_GRAPH_CLIENT_ID=
MS_GRAPH_CLIENT_SECRET=

# Used for the Zoom integration
#ZOOM_CLIENT_ID=
#ZOOM_CLIENT_SECRET=

#Used for the Daily integration
#DAILY_API_KEY=
#DAILY_SCALE_PLAN=''

# E-mail settings

# Cal uses nodemailer (@see https://nodemailer.com/about/) to provide email sending. As such we are trying to
# allow access to the nodemailer transports from the .env file. E-mail templates are accessible within lib/emails/

# Configures the global From: header whilst sending emails.
EMAIL_FROM='notifications@yourselfhostedcal.com'

# Configure SMTP settings (@see https://nodemailer.com/smtp/).
# Note: The below configuration for Office 365 has been verified to work.
EMAIL_SERVER_HOST='smtp.office365.com'
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER='<office365_emailAddress>'
# Keep in mind that if you have 2FA enabled, you will need to provision an App Password.
EMAIL_SERVER_PASSWORD='<office365_password>'
# ApiKey for cronjobs
CRON_API_KEY='0cc0e6c35519bba620c9360cfe3e68d0'

# Stripe Config
#NEXT_PUBLIC_STRIPE_PUBLIC_KEY= # pk_test_...
#STRIPE_PRIVATE_KEY=            # sk_test_...
#STRIPE_CLIENT_ID=              # ca_...
#STRIPE_WEBHOOK_SECRET=         # whsec_...
#PAYMENT_FEE_PERCENTAGE=0.005   # Take 0.5% commission
#PAYMENT_FEE_FIXED=10           # Take 10 additional cents commission

# Application Key for symmetric encryption and decryption
# must be 32 bytes for AES256 encryption algorithm
CALENDSO_ENCRYPTION_KEY=$2a$12$w3PPBFcmkrSJ23ETjWvMGuHpK8kechd.awEOmeDGQVlX1nIAL09oK

# Intercom Config
#NEXT_PUBLIC_INTERCOM_APP_ID=
